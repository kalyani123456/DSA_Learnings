public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        ListNode tempA = headA,tempB = headB;
        int lenA = 0,lenB=0;
        while(tempA!=null){ //get length of headA
            lenA++;
            tempA = tempA.next;
        }
        while(tempB!=null){ //get length of headB
            lenB++;
            tempB = tempB.next;
        }
        int diff = Math.abs(lenA-lenB);
        tempA = headA;
        tempB = headB;
        if(lenA>lenB){
            while(diff-->0){
               tempA = tempA.next; //move next till the difference node
            }
        }
        else{
             while(diff-->0){
               tempB = tempB.next; //move next till the difference node
            } 
        }
        while(tempA!=tempB){ //check if common exists
            tempA = tempA.next; // if not then move to next
            tempB = tempB.next; 
            if(tempA == null || tempB == null){ //if one of node reaches to end
              return null;  
            }
        }
        return tempA; //return any of the node
    }
}
