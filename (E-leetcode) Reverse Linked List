/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseList(ListNode head) {
        ListNode cur = head, prev = null;
        while(cur!=null){
          ListNode temp = cur.next; //save next of current
          cur.next = prev; //first make it last node by putting null and then point it to prev elements
          prev = cur; 
          cur = temp; //saved next
        }
        return prev; //return head of reverse list
    }
}
